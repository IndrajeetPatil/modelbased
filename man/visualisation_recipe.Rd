% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation_recipe.R,
%   R/visualisation_recipe.estimate_predicted.R
\name{visualisation_recipe}
\alias{visualisation_recipe}
\alias{visualisation_recipe.estimate_predicted}
\title{Visualization helper}
\usage{
visualisation_recipe(x, ...)

\method{visualisation_recipe}{estimate_predicted}(
  x,
  show_points = TRUE,
  points = NULL,
  line = NULL,
  ribbon = NULL,
  labs = NULL,
  ...
)
}
\arguments{
\item{x}{Something.}

\item{...}{Other arguments to be passed to or from other functions.}

\item{show_points}{If \code{TRUE}, will attempt at adding the points of the original data corresponding to the x and y axes.}

\item{points, line, ribbon, labs}{Additional aesthetics and parameters for the geoms (see customization example).}
}
\description{
Visualization helper
}
\examples{
library(modelbased)
library(see)

# Linear Models
# =============================
# Default
x <- estimate_relation(lm(mpg ~ wt, data = mtcars))
layers <- visualisation_recipe(x)
layers
plot(layers)

# Customize aesthetics
x <- estimate_relation(lm(mpg ~ wt, data = mtcars))
layers <- visualisation_recipe(x,
                               points = list(color = "red", alpha = 0.6, size = 3),
                               line = list(color = "blue", size = 4),
                               ribbon = list(fill = "green", alpha = 0.7),
                               labs = list(subtitle = "Oh yeah!"))
layers
plot(layers)


# 2-ways interaction ------------

# Numeric * numeric
x <- estimate_relation(lm(mpg ~ wt * qsec, data = mtcars))
layers <- visualisation_recipe(x)
plot(layers)

# Factor * numeric
x <- estimate_relation(lm(Sepal.Width ~ Species * Sepal.Length, data = iris))
layers <- visualisation_recipe(x)
plot(layers)


# 3-ways interaction ------------
data <- mtcars
data$vs <- as.factor(data$vs)
data$cyl <- as.factor(data$cyl)
data$new_factor <- as.factor(rep(c("A", "B"), length.out = nrow(mtcars)))

# Numeric * numeric * numeric
x <- estimate_relation(lm(mpg ~ wt * qsec * hp, data = data))
layers <- visualisation_recipe(x)
plot(layers)

# Numeric * numeric * factor
x <- estimate_relation(lm(mpg ~ wt * am * vs, data = data))
layers <- visualisation_recipe(x)
plot(layers)

# Numeric * factor * factor
x <- estimate_relation(lm(mpg ~ wt * cyl * new_factor, data = data))
layers <- visualisation_recipe(x)
plot(layers)

}
